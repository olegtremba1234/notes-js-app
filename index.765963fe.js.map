{"mappings":"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","sources":["src/js/modal.js","src/js/ui.js","src/js/notes.js","src/js/main.js"],"sourcesContent":["import { editNote, addNote, notes } from './notes.js';\nimport { renderNotesTable, renderSummaryTable } from './ui.js';\n\nconst categories = ['Task', 'Random Thought', 'Idea'];\n\nfunction createModal() {\n  const modal = document.createElement('div');\n  modal.id = 'modal';\n  modal.className = 'modal';\n\n  const modalContent = document.createElement('div');\n  modalContent.className = 'modal-content';\n\n  const closeButton = document.createElement('span');\n  closeButton.className = 'close-button';\n  closeButton.id = 'close-button';\n  closeButton.textContent = 'Ã—';\n\n  const addNoteForm = document.createElement('form');\n  addNoteForm.id = 'add-note-form';\n\n  const nameLabel = document.createElement('label');\n  nameLabel.setAttribute('for', 'note-name');\n  nameLabel.textContent = 'Note Name:';\n\n  const nameInput = document.createElement('input');\n  nameInput.type = 'text';\n  nameInput.id = 'note-name';\n  nameInput.required = true;\n\n  const categoryLabel = document.createElement('label');\n  categoryLabel.setAttribute('for', 'category');\n  categoryLabel.textContent = 'Category:';\n\n  const categorySelect = document.createElement('select');\n  categorySelect.id = 'category';\n  categorySelect.required = true;\n\n  categories.forEach(category => {\n    const option = document.createElement('option');\n    option.value = category;\n    option.textContent = category;\n    categorySelect.appendChild(option);\n  });\n\n  const contentLabel = document.createElement('label');\n  contentLabel.setAttribute('for', 'note-content');\n  contentLabel.textContent = 'Note Content:';\n\n  const contentInput = document.createElement('input');\n  contentInput.type = 'text';\n  contentInput.id = 'note-content';\n  contentInput.required = true;\n\n  const addButton = document.createElement('button');\n  addButton.type = 'submit';\n  addButton.textContent = 'Add Note';\n\n  addNoteForm.appendChild(nameLabel);\n  addNoteForm.appendChild(nameInput);\n  addNoteForm.appendChild(categoryLabel);\n  addNoteForm.appendChild(categorySelect);\n  addNoteForm.appendChild(contentLabel);\n  addNoteForm.appendChild(contentInput);\n  addNoteForm.appendChild(addButton);\n\n  const editNoteForm = document.createElement('form');\n  editNoteForm.id = 'edit-note-form';\n  editNoteForm.style.display = 'none';\n\n  const editNoteNameLabel = document.createElement('label');\n  editNoteNameLabel.setAttribute('for', 'edit-note-name');\n  editNoteNameLabel.textContent = 'Edit Note Name:';\n\n  const editNoteNameInput = document.createElement('input');\n  editNoteNameInput.type = 'text';\n  editNoteNameInput.id = 'edit-note-name';\n  editNoteNameInput.required = true;\n\n  const editNoteLabel = document.createElement('label');\n  editNoteLabel.setAttribute('for', 'edit-note-content');\n  editNoteLabel.textContent = 'Edit Note Content:';\n\n  const editNoteInput = document.createElement('input');\n  editNoteInput.type = 'text';\n  editNoteInput.id = 'edit-note-content';\n  editNoteInput.required = true;\n\n  const editNoteCategoryLabel = document.createElement('label');\n  editNoteCategoryLabel.setAttribute('for', 'edit-category');\n  editNoteCategoryLabel.textContent = 'Edit Category:';\n\n  const editNoteCategorySelect = document.createElement('select');\n  editNoteCategorySelect.id = 'edit-category';\n  editNoteCategorySelect.required = true;\n\n  categories.forEach(category => {\n    const option = document.createElement('option');\n    option.value = category;\n    option.textContent = category;\n    editNoteCategorySelect.appendChild(option);\n  });\n\n  const editButton = document.createElement('button');\n  editButton.type = 'submit';\n  editButton.textContent = 'Save Changes';\n\n  editButton.dataset.noteId = '';\n\n  editNoteForm.appendChild(editNoteNameLabel);\n  editNoteForm.appendChild(editNoteNameInput);\n  editNoteForm.appendChild(editNoteLabel);\n  editNoteForm.appendChild(editNoteInput);\n  editNoteForm.appendChild(editNoteCategoryLabel);\n  editNoteForm.appendChild(editNoteCategorySelect);\n  editNoteForm.appendChild(editButton);\n\n  modalContent.appendChild(closeButton);\n  modalContent.appendChild(addNoteForm);\n  modalContent.appendChild(editNoteForm);\n  modal.appendChild(modalContent);\n  closeButton.addEventListener('click', hideModal);\n\n  addNoteForm.addEventListener('submit', handleAddNote);\n\n  editNoteForm.addEventListener('submit', handleEditNote);\n\n  modal.addEventListener('click', handleBackdropClick);\n\n  document.addEventListener('keydown', handleEscapeKey);\n\n  document.body.appendChild(modal);\n}\n\nfunction showModal() {\n  const modal = document.querySelector('#modal');\n  const addNoteForm = document.querySelector('#add-note-form');\n  const editNoteForm = document.querySelector('#edit-note-form');\n\n  isEditModalOpen = false;\n\n  addNoteForm.style.display = 'block';\n  editNoteForm.style.display = 'none';\n\n  modal.style.display = 'block';\n}\n\nfunction hideModal() {\n  const modal = document.querySelector('#modal');\n  modal.style.display = 'none';\n\n  if (isEditModalOpen) {\n    const editNoteForm = document.querySelector('#edit-note-form');\n    editNoteForm.reset();\n\n    const addNoteForm = document.querySelector('#add-note-form');\n    addNoteForm.style.display = 'block';\n    isEditModalOpen = false;\n  }\n}\n\nlet isEditModalOpen = false;\n\nfunction showEditModal(noteId) {\n  const modal = document.querySelector('#modal');\n  const addNoteForm = document.querySelector('#add-note-form');\n  const editNoteForm = document.querySelector('#edit-note-form');\n  const editNoteNameInput = document.querySelector('#edit-note-name');\n  const editNoteContentInput = document.querySelector('#edit-note-content');\n  const editNoteCategorySelect = document.querySelector('#edit-category');\n  const editButton = document.querySelector('#edit-note-form button');\n\n  const note = notes.find(note => note.id === noteId);\n\n  if (note) {\n    addNoteForm.style.display = 'none';\n    editNoteForm.style.display = 'block';\n\n    editNoteNameInput.value = note.name;\n    editNoteContentInput.value = note.content;\n    editNoteCategorySelect.value = note.category;\n\n    editButton.dataset.noteId = note.id;\n\n    editButton.textContent = 'Save Changes';\n\n    isEditModalOpen = true;\n    modal.style.display = 'block';\n  } else {\n    console.error('Note not found.');\n  }\n}\n\nfunction handleEditNote(event) {\n  event.preventDefault();\n  const editNoteNameInput = document.querySelector('#edit-note-name');\n  const editNoteContentInput = document.querySelector('#edit-note-content');\n  const editNoteCategorySelect = document.querySelector('#edit-category');\n  const noteName = editNoteNameInput.value;\n  const noteContent = editNoteContentInput.value;\n  const category = editNoteCategorySelect.value;\n\n  const noteId = parseInt(event.target.querySelector('button').dataset.noteId);\n\n  if (noteContent && !isNaN(noteId)) {\n    editNote(noteId, noteName, noteContent, category); // Also update name and category\n    renderNotesTable();\n    hideModal();\n  } else {\n    alert('Note content is required.');\n  }\n}\n\nfunction handleAddNote(event) {\n  event.preventDefault();\n  const noteNameInput = document.querySelector('#note-name');\n  const noteContentInput = document.querySelector('#note-content');\n  const categorySelect = document.querySelector('#category');\n  const noteName = noteNameInput.value;\n  const noteContent = noteContentInput.value;\n  const category = categorySelect.value;\n  if (noteContent && category && noteName) {\n    addNote(noteName, noteContent, category);\n    renderNotesTable();\n    noteNameInput.value = '';\n    noteContentInput.value = '';\n    categorySelect.value = categories[0];\n    hideModal();\n  } else {\n    alert('Note content and category are required.');\n  }\n}\n\nfunction handleBackdropClick(event) {\n  if (event.target.id === 'modal') {\n    hideModal();\n  }\n}\n\nfunction handleEscapeKey(event) {\n  if (event.key === 'Escape') {\n    hideModal();\n  }\n}\n\nexport {\n  createModal,\n  showModal,\n  hideModal,\n  showEditModal,\n  handleBackdropClick,\n  handleAddNote,\n  handleEscapeKey,\n};\n","import {\n  notes,\n  editNote,\n  removeNote,\n  archiveNote,\n  unarchiveNote,\n} from './notes.js';\nimport { showEditModal } from './modal.js';\n\nfunction renderNotesTable() {\n  const notesTable = document.querySelector('#notes-table');\n  notesTable.innerHTML = '';\n\n  notes.forEach(note => {\n    const row = document.createElement('tr');\n    const nameCell = document.createElement('td');\n    const creationDateCell = document.createElement('td');\n    const categoryCell = document.createElement('td');\n    const contentCell = document.createElement('td');\n    const datesCell = document.createElement('td');\n    const editCell = document.createElement('td');\n    const archiveCell = document.createElement('td');\n    const deleteCell = document.createElement('td');\n\n    nameCell.textContent = note.name;\n    creationDateCell.textContent = new Date(note.id).toLocaleString();\n    categoryCell.textContent = note.category;\n    contentCell.textContent = note.content;\n    datesCell.textContent = note.dates.join(', ');\n\n    const editButton = document.createElement('button');\n    editButton.classList.add('edit-button');\n    editButton.dataset.noteId = note.id; // Store the note ID as a data attribute\n    editButton.addEventListener('click', () => {\n      showEditModal(note.id); // Pass the note ID as an argument\n    });\n\n    editCell.appendChild(editButton);\n\n    const archiveButton = document.createElement('button');\n    archiveButton.classList.add('archive-button');\n    archiveButton.dataset.noteId = note.id; // Store the note ID as a data attribute\n    archiveButton.addEventListener('click', () => {\n      if (note.archived) {\n        unarchiveNote(note.id); // Call the unarchiveNote function with the note ID\n      } else {\n        archiveNote(note.id); // Call the archiveNote function with the note ID\n      }\n      renderNotesTable(); // Update the table after archiving/unarchiving\n    });\n    archiveCell.appendChild(archiveButton);\n\n    const removeButton = document.createElement('button');\n    removeButton.classList.add('remove-button');\n    removeButton.dataset.noteId = note.id;\n    removeButton.addEventListener('click', () => {\n      removeNote(note.id);\n    });\n\n    deleteCell.appendChild(removeButton);\n\n    row.appendChild(nameCell);\n    row.appendChild(creationDateCell);\n    row.appendChild(categoryCell);\n    row.appendChild(contentCell);\n    row.appendChild(datesCell);\n    row.appendChild(editCell);\n    row.appendChild(archiveCell);\n    row.appendChild(deleteCell);\n\n    if (note.archived) {\n      row.classList.add('archived-note');\n    }\n\n    notesTable.insertBefore(row, notesTable.firstChild);\n  });\n}\n\nfunction renderSummaryTable() {\n  const summaryTable = document.querySelector('#summary-table');\n  summaryTable.innerHTML = '';\n\n  const activeNotesByCategory = notes.reduce((acc, note) => {\n    if (!note.archived) {\n      acc[note.category] = (acc[note.category] || 0) + 1;\n    }\n    return acc;\n  }, {});\n\n  const archivedNotesByCategory = notes.reduce((acc, note) => {\n    if (note.archived) {\n      acc[note.category] = (acc[note.category] || 0) + 1;\n    }\n    return acc;\n  }, {});\n\n  const categories = ['Task', 'Random Thought', 'Idea'];\n  categories.forEach(category => {\n    const row = document.createElement('tr');\n    const categoryCell = document.createElement('td');\n    const activeCell = document.createElement('td');\n    const archivedCell = document.createElement('td');\n\n    categoryCell.textContent = category;\n    activeCell.textContent = activeNotesByCategory[category] || 0;\n    archivedCell.textContent = archivedNotesByCategory[category] || 0;\n\n    row.appendChild(categoryCell);\n    row.appendChild(activeCell);\n    row.appendChild(archivedCell);\n\n    summaryTable.appendChild(row);\n  });\n}\n\nexport { renderNotesTable, renderSummaryTable };\n","// notes.js\nimport { renderNotesTable, renderSummaryTable } from './ui.js';\nlet notes = [];\n\nconsole.log('notes', notes);\n\nfunction addNote(noteName, noteContent, category) {\n  const note = {\n    id: Date.now(),\n    name: noteName,\n    content: noteContent,\n    category: category,\n    archived: false,\n    dates: extractDatesFromNote(noteContent),\n  };\n\n  notes.push(note);\n  renderNotesTable();\n  renderSummaryTable();\n}\n\nfunction editNote(noteId, noteName, noteContent, category) {\n  const noteIndex = notes.findIndex(note => note.id === noteId);\n  if (noteIndex !== -1) {\n    notes[noteIndex].name = noteName;\n    notes[noteIndex].content = noteContent;\n    notes[noteIndex].category = category;\n    notes[noteIndex].dates = extractDatesFromNote(noteContent);\n\n    renderNotesTable();\n    renderSummaryTable();\n  }\n}\n\nfunction removeNote(noteId) {\n  notes = notes.filter(note => note.id !== noteId);\n  renderNotesTable();\n  renderSummaryTable();\n}\n\nfunction archiveNote(noteId) {\n  const noteIndex = notes.findIndex(note => note.id === noteId);\n  if (noteIndex !== -1) {\n    notes[noteIndex].archived = true;\n    renderNotesTable();\n    renderSummaryTable();\n  }\n}\n\nfunction unarchiveNote(noteId) {\n  const noteIndex = notes.findIndex(note => note.id === noteId);\n  if (noteIndex !== -1) {\n    notes[noteIndex].archived = false;\n    renderNotesTable();\n    renderSummaryTable();\n  }\n}\n\nfunction prepopulateNotes() {\n  const note1 = {\n    id: Date.now(), // Unique ID for each note based on timestamp\n    name: 'note1',\n    category: 'Task',\n    content: 'Remember to buy groceries on 8/1/2023',\n    archived: false,\n    dates: ['8/1/2023'],\n  };\n\n  const note2 = {\n    id: Date.now() + 1, // Unique ID for each note based on timestamp\n    name: 'note2',\n    category: 'Task',\n    content: 'Meeting with Jane at 10 am tomorrow',\n    archived: false,\n    dates: ['8/2/2023'],\n  };\n\n  notes.push(note1, note2);\n}\n\nfunction extractDatesFromNote(noteContent) {\n  const datePattern = /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{4}\\b/g;\n  return noteContent ? noteContent.match(datePattern) || [] : [];\n}\n\nexport {\n  notes,\n  addNote,\n  editNote,\n  removeNote,\n  archiveNote,\n  unarchiveNote,\n  prepopulateNotes,\n  extractDatesFromNote,\n};\n","// main.js\n\n// Import modules\nimport {\n  notes,\n  prepopulateNotes,\n  editNote,\n  archiveNote,\n  unarchiveNote,\n  removeNote,\n} from './notes.js';\nimport { renderNotesTable, renderSummaryTable } from './ui.js';\nimport {\n  createModal,\n  showModal,\n  hideModal,\n  handleAddNote,\n  handleBackdropClick,\n  handleEscapeKey,\n} from './modal.js';\n\n// Call the createEditModal function to generate the edit modal when the page is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  createModal();\n  prepopulateNotes();\n  renderNotesTable();\n  renderSummaryTable();\n\n  // Add event listener to the \"Add Note\" button to show the modal\n  const addNoteButton = document.querySelector('#add-note-button');\n  addNoteButton.addEventListener('click', showModal);\n\n  // Add event listener to the \"Close\" button to hide the modal\n  const closeButton = document.querySelector('#close-button');\n  closeButton.addEventListener('click', hideModal);\n\n  // Add event listener to the \"submit\" event of the add-note-form\n  const addNoteForm = document.querySelector('#add-note-form');\n  addNoteForm.addEventListener('submit', handleAddNote);\n\n  // Add event listener to the modal backdrop to close the modal\n  const modalBackdrop = document.querySelector('#modal');\n  modalBackdrop.addEventListener('click', handleBackdropClick);\n\n  // Add event listener to the document for \"Escape\" key press\n  document.addEventListener('keydown', handleEscapeKey);\n\n  // Add event listener to the notes table for click events (event delegation)\n  const notesTable = document.querySelector('#notes-table');\n  notesTable.addEventListener('click', handleNotesTableClick);\n\n  // Rest of the existing event listeners remain the same\n});\n\n// Function to handle click events inside the notes table\nfunction handleNotesTableClick(event) {\n  const target = event.target;\n  if (target.classList.contains('edit-button')) {\n    // Handle edit button click\n    const noteId = getNoteIdFromButton(target);\n    editNote(noteId);\n  } else if (target.classList.contains('archive-button')) {\n    // Handle archive button click\n    const noteId = getNoteIdFromButton(target);\n    archiveNote(noteId);\n  } else if (target.classList.contains('remove-button')) {\n    // Handle remove button click\n    const noteId = getNoteIdFromButton(target);\n    removeNoteModal(noteId); // Updated to use removeNoteModal function\n  }\n}\n\n// Function to get the note ID from a button element\nfunction getNoteIdFromButton(button) {\n  // Traverse the DOM to find the closest parent row (tr)\n  const row = button.closest('tr');\n  // Get the note ID stored in the row's dataset\n  return parseInt(row.dataset.noteId);\n}\n\n// Function to show the confirmation modal for removing a note\nfunction removeNoteModal(noteId) {\n  const confirmation = confirm('Are you sure you want to remove this note?');\n  if (confirmation) {\n    removeNote(noteId);\n  }\n}\n"],"names":["$8a7e756c566dd1ea$var$categories","$8a7e756c566dd1ea$export$b63bc83cbdd7b6d5","modal","document","createElement","id","className","modalContent","closeButton","textContent","addNoteForm","nameLabel","setAttribute","nameInput","type","required","categoryLabel","categorySelect","forEach","category","option","value","appendChild","contentLabel","contentInput","addButton","editNoteForm","style","display","editNoteNameLabel","editNoteNameInput","editNoteLabel","editNoteInput","editNoteCategoryLabel","editNoteCategorySelect","editButton","dataset","noteId","addEventListener","$8a7e756c566dd1ea$export$af4939467128bcd0","$8a7e756c566dd1ea$export$b5314dcf8197a436","$8a7e756c566dd1ea$var$handleEditNote","$8a7e756c566dd1ea$export$61ef03c50e1eaafb","$8a7e756c566dd1ea$export$e6a11e5183766f33","body","$8a7e756c566dd1ea$export$d7e8d4d4450c819c","querySelector","$8a7e756c566dd1ea$var$isEditModalOpen","reset","$8a7e756c566dd1ea$export$295e700c137c351","editNoteContentInput","note1","$320552736c1199f4$export$fff9cb9cb797a870","find","note","name","content","console","error","event","preventDefault","noteName","noteContent","parseInt","target","isNaN","$320552736c1199f4$export$b5544a2ab4d514b4","$2faff07f6008cb7d$export$830414193ff5ec64","alert","noteNameInput","noteContentInput","$320552736c1199f4$export$79159e21a6bceab7","key","notesTable","innerHTML","row","nameCell","creationDateCell","categoryCell","contentCell","datesCell","editCell","archiveCell","deleteCell","Date","toLocaleString","dates","join","classList","add","archiveButton","archived","$320552736c1199f4$export$3576927aeac67f67","$320552736c1199f4$export$8fd3e482aec0deec","removeButton","$320552736c1199f4$export$84ca89dac13ca70a","insertBefore","firstChild","$2faff07f6008cb7d$export$d9fc0ffc78dcb59e","summaryTable","activeNotesByCategory","reduce","acc","archivedNotesByCategory","activeCell","archivedCell","now","$320552736c1199f4$export$cbe3c079e8aeac","push","noteIndex","findIndex","filter","$320552736c1199f4$export$4a95152e3e8f17e9","note2","match","$d706c914d748cb55$var$handleNotesTableClick","contains","$d706c914d748cb55$var$getNoteIdFromButton","confirm","$d706c914d748cb55$var$removeNoteModal","button","closest","log"],"version":3,"file":"index.765963fe.js.map"}